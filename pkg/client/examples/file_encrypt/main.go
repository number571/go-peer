package main

import (
	"github.com/number571/go-peer/pkg/client"
	"github.com/number571/go-peer/pkg/client/message"
	"github.com/number571/go-peer/pkg/crypto/asymmetric"
)

const (
	privKeyStr = "PrivKey{3082025D02010002818100BF52CBCB97FE207155DCF5182DC435C0554E2EDF702ACD232B5BE9623D1A70740A6804D5783527547707E3BA36AE63825DC05A7B1866C4F31EFD5A48FA77F43C15A6C2ED323A3A832DF6801FC5BD7EB62328899B997AA8171F4D250A29F36FD15640E48A0821F67747C1BA77E7B5B6BAD8D45ADD329CE8616F8656BFA2B712D3020301000102818100BCFF295AC196C4ADB0C84945CD501A5918EBD6D9DA902D7D2483F3149C8FD5AE8BE91D7D52F60F181D4DA9E475C7E77D0CE7CB79F62CEF39CBCF32B50CD81A66D8E85AA56F4BBF5B85A8D01D55544D6C1A5D3F3F0AE3567AF017D9903AE1A09D147ACCFFDBD7FF3AD776E8B78359D8B7954C9E2C1828B567939CDFB7885097E1024100C7E1C9AD961774265D2B42DE7EBF0EFC7766D2B0DE40A91538F60D62B4BA14A29EADD47D063BCBBBAF2D0594D8811721F0ABEEA23D8E8B60B3A095A58AAC9BB5024100F509DFEF1BE2D0D61CEFA8B94AB8632A35E5E5D042C91EAA0EA1959F0EA89589749EFFAF762FE4E7A2D2CDCA116E2E7FD01D76AEBEC0B5FD23B4134D4728D96702402EC0882CBAFB976655CA85A4871EE74174282FC5C0E67CE602E1C275C0F1F95BA423E29CAFB592CCBE8798539D646C65BAE66C35B4923FD5898E591254625535024047FB62A1271BF6252FD2E749A73D8B43F71955ED5BF120E4EBEF63B899E1C42BE0EA6449F2FA16D044F0902B6FFB620581E965D7E7894CECD3F42E4761440AB9024100A2A6EBD4025F2EAB38EFADB397099F409ACF0527982C3C859B67C775D120F37515F59030217D46E23899A39816E1BAF405A7F3EBEB45E297B014CA5B1FAAC460}"
)

func main() {
	client := newClient()
	encryptFile(client, client.GetPubKey(), "image.jpg")
	decryptFile(client, "decrypted_")
}

func newClient() client.IClient {
	privKey := asymmetric.LoadRSAPrivKey(privKeyStr)
	return client.NewClient(
		newSettings(privKey.GetSize()),
		privKey,
	)
}

func newSettings(size uint64) message.ISettings {
	return message.NewSettings(&message.SSettings{
		FMessageSizeBytes: (8 << 10),
		FKeySizeBits:      size,
	})
}
